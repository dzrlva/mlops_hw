services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MINIO_BUCKET_NAME: "mlopsbucket"
      FASTAPI_ENDPOINT: "http://fastapi:8000"
    networks:
      - frontend
      - backend
    volumes:
      - ./service:/service
    depends_on:
      - minio
      - tracking_server

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    networks:
      - frontend
      - backend
    environment:
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MINIO_BUCKET_NAME: "mlopsbucket"
      FASTAPI_ENDPOINT: "http://fastapi:8000"
    volumes:
      - ./service:/service
    depends_on:
      - fastapi
      - minio
      - tracking_server

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - frontend
      - backend
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  db:
    restart: always
    image: postgres
    container_name: mlflow_db
    expose:
      - 5432
    networks:
      - backend
    environment:
      POSTGRES_USER: "mlflow"
      POSTGRES_PASSWORD: "mlflow"
      POSTGRES_DB: "mlflow"
      PG_PORT: 5432
    volumes:
      - ./db_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "mlflow"]
      interval: 5s
      timeout: 5s
      retries: 3

  tracking_server:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    image: ghcr.io/mlflow/mlflow:v2.19.0
    container_name: mlflow_server
    depends_on:
      - db
    ports:
      - "5001:5000"
    networks:
      - frontend
      - backend
    environment:
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
      MLFLOW_S3_ENDPOINT_URL: "minio:9000"
      MLFLOW_S3_IGNORE_TLS: true
      MLFLOW_TRACKING_URI: http://mlflow:5001
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow:mlflow@db:5432/mlflow
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination minio://mlopsbucket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge